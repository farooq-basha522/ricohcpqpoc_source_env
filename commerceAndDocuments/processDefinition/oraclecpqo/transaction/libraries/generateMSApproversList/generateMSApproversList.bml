appString = "";
isDebug = true;
appArr = String[];
mD_Email = "";
mD_EmpStatus = "";
apprName = "";
vPMD_Email = "";
vPMD_EmpStatus = "";
rVP_Email = "";
l3Approver_Email = "";
isUserActive = false;
isUserExistsinGroup = false;
isExistsinHRMS = false;
isActiveinHRMS = false;
isRMSSCAccount = false;
isEnterpriseAccount = false;
isExistsinERVP = false;
approverName = "";
approverDict = dict("string");
rowDelim = "@$@";
apprNameArray= String[];
projectNumberArray = String[];
APPROVER_GROUP = "ricohPricingApprover";
DFOEmailVar = ""; 
AreaDict = dict("string");

//------------ Level 3 Approver -----------------
approverMrgTable = BMQL("SELECT EmailID FROM MS_ApprovalMrg where PricingApprovalLevel = 'Level 3 Approver' AND ApprovalType = $ApprovalType");
for eachRec in approverMrgTable {
	l3Approver_Email =  get(eachRec , "EmailID");
}
//-----------------------------------------------	
//CR-80 POST MVP changes description by Namrata
DFO_RecordFound = false;
mdEmailVar = "";//Modifed existing for this CR change CHG0087276
areaIndicator_MDNAME = "";

DFOTable = BMQL("SELECT MD_Name,DFO_Email , Area_Indicator FROM RAC_DFO") ;
for record in DFOTable{
	put(AreaDict , get(record , "Area_Indicator"), get(record , "DFO_Email")) ;
	if(get(record , "MD_Name") <> "" AND NOT ISNULL(get(record , "DFO_Email")) AND (lower(get(record , "DFO_Email")) == lower(pricingApproverEmailfromRISE_t) OR get(record , "MD_Name") == managinDirectorNameFromRISE_t)){
	mdEmailVar = get(record , "DFO_Email");
	areaIndicator_MDNAME = get(record , "Area_Indicator");

	}
}
if(areaIndicator_t <> ""){
	if(containsKey(AreaDict,areaIndicator_t)){
		DFOEmailVar = get(AreaDict,areaIndicator_t);
		DFO_RecordFound = true;
	}
}
//Modifed existing for this CR change CHG0087276
if((areaIndicator_t <> "") OR (mdEmailVar <> "" AND areaIndicator_MDNAME == "")){
	if(containsKey(AreaDict,areaIndicator_t) AND mdEmailVar == ""){
		DFOEmailVar = get(AreaDict,areaIndicator_t);
		DFO_RecordFound = true;
	}
	elif(mdEmailVar <> ""){//Start here: Modifed existing for this CR change CHG0087276

			DFOEmailVar = mdEmailVar;
			DFO_RecordFound = true;
		}	//End here:Modifed existing for this CR change CHG0087276
}

if(DFO_RecordFound == false){
	DFOEmailVar = get(AreaDict,"Catch All");
}

if(ApprovalLevel == "Level 1"){
	append(apprNameArray, DFOEmailVar);
}elif(ApprovalLevel == "Level 2"){
	append(apprNameArray, DFOEmailVar);
}elif(ApprovalLevel == "Level 3"){
	append(apprNameArray, l3Approver_Email);
}
/*
if(pricingApproverEmailfromRISE_t <> ""){
	mD_Email = pricingApproverEmailfromRISE_t;
}else{
	mD_Email = pricingApproverEmail_t;
}
if(isDebug){
	if(pricingApproverEmailfromRISE_t <> ""){
		Print "MD Email From RISE: "+mD_Email ;
	}else{
		Print "MD Email User Entry: "+mD_Email ;
	}
}
//HYPERCARE-CR51_CHG#0082000__DescriptionOfChange_by Namrata
if(TransactionType == "Net New" AND isThisAnEnterpriseAccountEdit_t == false){
	if(ApprovalLevel == "Level 1"){
		append(apprNameArray, mD_Email);
	}elif(ApprovalLevel == "Level 2"){
		append(apprNameArray, mD_Email);
	}elif(ApprovalLevel == "Level 3"){
		append(apprNameArray, l3Approver_Email);
	}
}else{
	arraysize = range(jsonarraysize(customerAccountResult_t));
	for each in arraysize {
		if(NOT isnull(jsonget(json(jsonarrayget(customerAccountResult_t, each)),"project_Result_t"))){
			append(projectNumberArray, jsonget(json(jsonarrayget(customerAccountResult_t, each)),"project_Result_t"));
		}
	}
	querryAppTable = BMQL("SELECT AccountType, RMSSC_DIR_Email, RMSSC_VP_Email, VPMD_Email, RVP_Email FROM RAC_MS_FNF_AUTHORITY where OracleProjectNumber IN $projectNumberArray");
	for eachRow in querryAppTable{
		accountType = get(eachRow, "AccountType");
	
	//HYPERCARE-CR51_CHG#0082000__DescriptionOfChange_by Namrata
	//PostMVP_CR076# - Added ZBA Condition - Chakri
	//PostMVP_CR077# - Added Expansion New Location Condition - Chakri
		if((mSTransactionType_t == "Net New" OR mSTransactionType_t == "ZBA" OR mSTransactionType_t == "Expansion (New Location)") AND isThisAnEnterpriseAccountEdit_t == false AND accountType == "Enterprise"){
			accountType = "Area";
		}
	
		if((mSTransactionType_t == "Net New" OR mSTransactionType_t == "ZBA" OR mSTransactionType_t == "Expansion (New Location)") AND isThisAnEnterpriseAccountEdit_t == true){
			accountType = "Enterprise";
		}
	//HYPERCARE-CR51_CHG#0082000__DescriptionOfChange_by Namrata		
		if(accountType == "Area"){
			if(ApprovalLevel == "Level 1"){
				append(apprNameArray, mD_Email);
			}elif(ApprovalLevel == "Level 2"){
				append(apprNameArray, mD_Email);
			}elif(ApprovalLevel == "Level 3"){
				append(apprNameArray, l3Approver_Email);
			}
		}
		 elif(accountType == "Enterprise"){
			 isEnterpriseAccount = true;
			if(ApprovalLevel == "Level 1"){
				append(apprNameArray, get(eachRow, "RVP_Email"));
			}elif(ApprovalLevel == "Level 2"){
				append(apprNameArray, get(eachRow, "RVP_Email")); //fetch from ERVP table CR51
			}elif(ApprovalLevel == "Level 3"){
				append(apprNameArray, l3Approver_Email);
			}
			//print  apprNameArray;
		 }
		 
		 	 
		 elif(accountType == "RMSSC"){
			isRMSSCAccount = true;
			if(ApprovalLevel == "Level 1"){
				append(apprNameArray, get(eachRow, "RMSSC_DIR_Email"));
			}elif(ApprovalLevel == "Level 2"){
				append(apprNameArray, get(eachRow, "RMSSC_VP_Email"));
			}elif(ApprovalLevel == "Level 3"){
				append(apprNameArray, l3Approver_Email);
			}
		}
	}
}
if(isDebug){
	print "Level: "+ApprovalLevel ;
	print "Approver(s): ";print apprNameArray;
	print "Checking in HRMS";
	print "---------------------------------";
}	
for eachApprover in apprNameArray {
	isExistsinHRMS = false;
	eachApproverStatus = "";
	eachApproverSupervisor = "";
	emailParam = lower(eachApprover);
	querryAppTable = BMQL("SELECT UserName, EmployeeStatus, SupervisorEmail FROM RAC_HRMS where EmailAddress = $emailParam");
	for eachRow in querryAppTable{
		eachApproverStatus = get(eachRow, "EmployeeStatus");
		eachApproverSupervisor = get(eachRow, "SupervisorEmail");
		isExistsinHRMS = true;
	}
	if(NOT isExistsinHRMS){
		print "NOT Found in HRMS";
		put(approverDict, eachApprover, eachApprover );
	}else{
		if(isRMSSCAccount){
			if(isExistsinHRMS AND eachApproverStatus == "Active"){
				put(approverDict, eachApprover, eachApprover );
			}
		}else{
			//if(NOT isEnterpriseAccount){
				if(ApprovalLevel == "Level 1" OR ApprovalLevel == "Level 3"){
					if(isExistsinHRMS AND eachApproverStatus == "Active"){
						put(approverDict, eachApprover, eachApprover );
						//append(apprNameArray,eachApprover);
					}elif(isExistsinHRMS AND eachApproverStatus <> "Active"){
						put(approverDict, eachApprover, eachApproverSupervisor);
						//append(apprNameArray,eachApproverSupervisor);
					}
				}elif(ApprovalLevel == "Level 2"){
					put(approverDict, eachApprover, eachApproverSupervisor);
				}
			//}
		}
	}
}
//START_HYPERCARE-CR51_CHG#0082000__DescriptionOfChange_by Namrata
for eachApprover in apprNameArray {
	isExistsinERVP = false;
	//eachApproverStatus = "";
	eachERVPEmail = "";
	emailParam = lower(eachApprover);
	//print apprNameArray ;
	querryAppTable = BMQL("SELECT RVP_Email,ERVP_Email  FROM RAC_ERVP where RVP_Email = $emailParam");
	for eachRow in querryAppTable{
		//eachApproverStatus = get(eachRow, "EmployeeStatus");
		eachERVPEmail = get(eachRow, "ERVP_Email");
		isExistsinERVP = true;
	}
	if(isEnterpriseAccount){
		if(NOT isExistsinERVP){
			print "111NOT Found in ERVP";
			put(approverDict, eachApprover, eachApprover );
		}else{
			if(ApprovalLevel == "Level 2"){
				if(isExistsinERVP ){
				put(approverDict, eachApprover, eachERVPEmail);
				}
			}
			elif(ApprovalLevel == "Level 1" ){
				put(approverDict, eachApprover, eachApprover );
			}
		}	

	}
}

//END_HYPERCARE-CR51_CHG#0082000__DescriptionOfChange_by Namrata
apprNameArray = values(approverDict);
*/
//CR-80 POST MVP changes description by Namrata

for each in apprNameArray {
	if(isDebug){
		print "Level: "+ApprovalLevel ;
		print "Approver: "+each ;
	}
	if(each <> ""){
		append(appArr, each );
	}
}
appString = join(appArr,"#!#");
return appString ;